int partition(char[] array, int left, int right, int pivotIdx)
{
    char pivotVal = array[pivotIdx];
    int storeIdx = left;
    int i = left;
    char temp;
    temp = array[pivotIdx];
    array[pivotIdx] = array[right];
    array[right] = temp;
    while (i < right)
    {
        if (array[i] < pivotVal)
        {
            temp = array[i];
            array[i] = array[storeIdx];
            array[storeIdx] = temp;
            ++storeIdx;
        }
        ++i;
    }
    temp = array[storeIdx];
    array[storeIdx] = array[right];
    array[right] = temp;
    return storeIdx;
}
void quicksort(char[] array, int left, int right)
{
    int pivotIdx;
    if (left < right)
    {
        pivotIdx = left + right - left / 2;
        pivotIdx = partition(array, left, right, pivotIdx);
        quicksort(array, left, pivotIdx - 1);
        quicksort(array, pivotIdx + 1, right);
    }
    return;
}
int main()
{
    char letters[36] = "thequickbrownfoxjumpsoverthelazydog";
    quicksort(letters, 0, 34);
    printf("%s\n", letters);
    return 0;
}
